# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank' # Yan in vim mode
set -g @plugin 'tmux-plugins/tmux-cpu' # CPU STATS
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# NOTE: OPEN EVERYTHING (FILES OR URLS) in COPY-MODE
# - ctrl-o -> EDITOR
# - O -> OPEN
set -g @plugin 'tmux-plugins/tmux-open' 
# set -g @plugin 'b0o/tmux-autoreload'
set -g @plugin 'tmux-plugins/tmux-cowboy' # KILL <prefix> * 


# ----------------------------------------------------------------------------
## General 
# ----------------------------------------------------------------------------
set -g mouse on  # Mouse support 
# Count from 1 
set -g base-index 1 
set -g pane-base-index 1 
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Prompt to rename window right after it's created
# set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

set -g default-terminal "xterm-256color"

bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a session

# ----------------------------------------------------------------------------
# Status Bar
# ----------------------------------------------------------------------------
set -g status-position top
set -g status-interval 5
set -g status-left-length 50
set -g status-right-length 40

# Theme colors
# Base Colors
color0="#1c1c1c"
color1="#ec3653"
color2="#B0cF63"
color3="#ebc17a"
color4="#0b6774"
color5="#aa6292"
color6="#86d3ce"
color7="#cacaca"
color8="#636363"
color9="#bc5653"
color10="#909d63"
color11="#ebc17a"
color12="#7eaac7"
color13="#aa6292"
color14="#86d3ce"
color15="#f7f7f7"
# Setup ssh mode
%if #{==:#{SSH_CLIENT},}
color_fg="#afd700"
color_bg="#0e0e0e"
host_color=$color_fg
host_bg_color=$color_bg
host_icon=""
%else
color_fg="$color7"
color_bg="$color0"
host_color=$color15
host_bg_color=$color4
host_icon="󰖟 "
%endif
# Theme settings
# Color definitions
set -g status-bg $color_bg
set -g status-fg $color_fg
# pane borders
set -g pane-border-style "fg=$color_bg"
set -g pane-active-border-style "fg=$color_fg"
# set -g cursor-colour $color_fg

setw -g mode-style "fg=$color1 bg=$color0 bold" # copy mode
# set -g message-style "fg=$color_fg,bg=$color_bg"
# set -g status-style "fg=$color_fg,bg=$color_bg"
setw -g window-status-current-style "fg=$color7,bold,bg=$color8"
setw -g window-status-activity-style "fg=$color_fg"

# Define widgets for status bar
wg_is_zoomed="#[fg=$color1]#{?window_zoomed_flag,0,}#[default]"


# Set the left side of the status bar
set -g status-left "#[bg=$host_bg_color fg=$host_color bold] #H $host_icon#[bg=$color_fg fg=$host_bg_color]#{?client_prefix,#[bg=$color1],}#[fg=$color_bg] #S #[default]#{?client_prefix,#[fg=$color1],}#[align=absolute-centre]#[fg=$color4,bg=$color1]#([ $(tmux show-option -qv key-table) = 'off' ] && echo ' DETACHED ')#[default]#[fg=$color4,bg=$color1]#{?#{==:#{pane_in_mode},1}, COPY-MOD ,}#[default]"
set -g status-left-length 65

# Set the right side of the status bar
set -g status-right "CPU#{cpu_icon}#{cpu_percentage}|GPU#{gpu_icon}#{gpu_percentage}"

# ----------------------------------------------------------------------------
# Yazi
# ----------------------------------------------------------------------------
# https://yazi-rs.github.io/docs/image-preview/
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# ----------------------------------------------------------------------------
# Keybinds
# ----------------------------------------------------------------------------
unbind C-b
set -g prefix C-a
bind C-a send-prefix
bind Escape copy-mode
# reload config
bind M-r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded"
# new window and retain cwd
bind c new-window -c "#{pane_current_path}"
bind '%' split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
 
# Better vim 
# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

# lolxd ? 
bind "t" clock-mode

# ----------------------------------------------------------------------------
# Nested Remote
# ----------------------------------------------------------------------------
# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'set -g status-position bottom'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  refresh-client -S

# ----------------------------------------------------------------------------
# MY Bitwarden
# ----------------------------------------------------------------------------
set -g @bw-session 'BW_SESSION'
# bind "b" display-popup "bitwarden.sh"
#bind "b" run "#{d:config_files}/scripts/bitwarden.sh"
bind "b" menu \
    Unlock u "popup -E #{d:config_files}/scripts/bitwarden.sh unlock" \
    Password p "popup -E #{d:config_files}/scripts/bitwarden.sh pass" \
    TOTP f "popup -E #{d:config_files}/scripts/bitwarden.sh totp" \
    All a "popup -E #{d:config_files}/scripts/bitwarden.sh all"


# ----------------------------------------------------------------------------
# Session management
# ----------------------------------------------------------------------------
# Continium
set -g @continuum-restore 'on'
# set -g @continuum-boot 'on'

# ----------------------------------------------------------------------------
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
